version: '3.7'

services:
    db:
        restart: always
        image: postgres
        container_name: mlflow_db
        expose:
            - "${PG_PORT}"
        environment:
            - POSTGRES_USER=${PG_USER}
            - POSTGRES_PASSWORD=${PG_PASSWORD}
            - POSTGRES_DATABASE=${PG_DATABASE}
        volumes:
            - /home/ec2-user/db_data/psql:/var/lib/postgresql/data/
        healthcheck:
            test: ["CMD", "pg_isready", "-p", "${PG_PORT}", "-U", "${PG_USER}"]
            interval: 5s
            timeout: 5s
            retries: 3
        
    # db-mysql:
    #     restart: always
    #     image: mysql/mysql-server:latest
    #     container_name: mlflow_db
    #     ports:
    #         - "3306:3306"
    #     environment:
    #         - MYSQL_DATABASE=${MYSQL_DATABASE}
    #         - MYSQL_USER=${MYSQL_USER}
    #         - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    #         - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    #     volumes:
    #         - /home/ec2-user/db_data/mysql:/var/lib/mysql

    web:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        depends_on:
            - mc
            - db
        ports:
            - "5000:5000"
        environment:
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        # command: mlflow server --app-name basic-auth --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://${MLFLOW_ARTIFACTS_PATH} --host 0.0.0.0
        command: >
            mlflow server
            --app-name basic-auth
            --backend-store-uri postgresql://${PG_USER}:${PG_PASSWORD}@db:${PG_PORT}/${PG_DATABASE}
            --host 0.0.0.0
            --serve-artifacts
            --artifacts-destination s3://${MLFLOW_ARTIFACTS_PATH}

